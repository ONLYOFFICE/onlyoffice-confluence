$webResourceManager.requireResource("onlyoffice.onlyoffice-confluence-plugin:onlyoffice-confluence-plugin-resources-editor")
#requireResourcesForContext("viewattachments")
#requireResourcesForContext("editor")

<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ANSI" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width" />

    <!--
    *
    * (c) Copyright Ascensio System SIA 2024
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *     http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    *
    -->

    <title>${docTitle} - ONLYOFFICE</title>

    #standardHeader()

    <link rel="shortcut icon" href="${favicon}">
    <link rel="icon" type="image/x-icon" href="${favicon}">
    <meta name="ajs-space-name" content="${spaceName}">
    <meta name="ajs-page-id" content="${pageId}">
    <meta name="ajs-latest-page-id" content="${pageId}">
    <meta name="ajs-space-key" content="${spaceKey}">
    <meta name="ajs-parent-page-id" content="${pageId}">
    <meta name="ajs-original-parent-page" content="${pageTitle}">
    <meta name="ajs-from-page-title" content="${pageTitle}">
    <meta name="ajs-is-blog-post" content="${isBlogPost}">
</head>

<body>
    <div id="aui-flag-container">
        <div data-aui-flag-stack="quickreload" class="aui-flag-stack">
            <div class="aui-flag qr-flag aui-flag-stack-top-item" aria-live="polite" open="open" aria-hidden="false"></div>
        </div>
    </div>
    <div class="form">
        <div id="iframeEditor"></div>
        <span style="display:none;" id="editorConfig" aria-hidden="true">$configAsHtml</span>
    </div>

    <script type="text/javascript" src="${docserviceApiUrl}"></script>
    <script type="text/javascript" language="javascript">

        var docEditor;
        var defaultPanelComponent = new Array();

        var onAppReady = function () {
            var errorMessage = "$!{errorMessage}";
            if (errorMessage) {
                docEditor.showMessage(errorMessage);
            }
            if (Boolean($!{demo})) {
                docEditor.showMessage("$i18n.getText('onlyoffice.editor.message.demo')");
            }
        };

        var onRequestHistory = function () {
            var historyInfoUri = "$!{historyInfoUriAsHtml}";
            var xhr = new XMLHttpRequest();
            xhr.open("GET", historyInfoUri, false);
            xhr.send();

            if (xhr.status == 200) {
                var historyInfo = JSON.parse(xhr.responseText);
                docEditor.refreshHistory(historyInfo);
            }
        };

        var onRequestHistoryData = function (event) {
            var version = event.data;
            var historyDataUri = "$!{historyDataUriAsHtml}";
            var xhr = new XMLHttpRequest();
            xhr.open("GET", historyDataUri + "&version=" + version, false);
            xhr.send();

            if (xhr.status == 200) {
                var historyData = JSON.parse(xhr.responseText);
                docEditor.setHistoryData(historyData);
            }
        };

        var onRequestHistoryClose = function() {
            document.location.reload();
        };

        var insertDialog = function (docEditorEvent, windowFromUrl, fileTypes, command = null) {
            if (AJS.Editor.ImageDialog.panelComponent.length == 0) {
                var attachmentsPanelView = new AJS.Editor.FileDialog.AttachmentsPanelView({
                    eventListener: AJS.Editor.FileDialog.eventListener
                });

                AJS.Editor.ImageDialog.panelComponent.push(attachmentsPanelView);
                AJS.Editor.ImageDialog.panelComponent.push(new AJS.Editor.FileDialog.ExternalPanelView());
                AJS.Editor.ImageDialog.panelComponent.push(new AJS.Editor.FileDialog.SearchPanelView());
            }

            if (defaultPanelComponent.length == 0) {
                AJS.Editor.ImageDialog.panelComponent.forEach((component) => {
                    defaultPanelComponent.push(component);
                });
            }

            AJS.Editor.ImageDialog.panelComponent.splice(0, AJS.Editor.ImageDialog.panelComponent.length)
            defaultPanelComponent.filter(function(el, i) {
                if (windowFromUrl) {
                    return true;
                } else {
                    return i != 1;
                }

              }).forEach((component) => {
                AJS.Editor.ImageDialog.panelComponent.push(component);
            });

            AJS.Editor.ImageDialog.insertImageDialog(function(a) {
                if (a.url && windowFromUrl) {
                    docEditorEvent({
                        "c": command,
                        "url": a.url
                    });
                } else {
                    var selectItems = a.selectItems;
                    var attachments = new Array();
                    selectItems.forEach((selectItem) => {
                        attachments.push(selectItem.attributes.id);
                    });

                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "$!{attachmentDataAsHtml}", false);
                    xhr.send(JSON.stringify({
                        command: command,
                        attachments: attachments
                    }));

                    if (xhr.status == 200) {
                        var dataAttachments = JSON.parse(xhr.responseText);

                        // bug https://bugzilla.onlyoffice.com/show_bug.cgi?id=50683
                        // dataAttachments.forEach((dataAttachment) => {
                        //    docEditorEvent(dataAttachment);
                        // });

                        docEditorEvent(dataAttachments.pop());
                    }
                }
            });

            var dialog = $("#insert-image-dialog");

            dialog.find(".file-list").on("DOMNodeInserted", function(event) {
                var fileExt = event.srcElement.dataset.fileName.split(".").pop();
                if (!fileTypes.includes(fileExt)) $(event.srcElement).remove();
            });
        };

        var onRequestInsertImage = function(event) {
            insertDialog(docEditor.insertImage, true, $insertImageTypesAsHtml, event.data.c);
        };

        var onRequestCompareFile = function() {
            insertDialog(docEditor.setRevisedFile, false, $compareFileTypesAsHtml);
        };

        var onRequestMailMergeRecipients = function(event) {
            insertDialog(docEditor.setMailMergeRecipients, false, $mailMergeTypesAsHtml);
        };

        var onRequestSaveAs = function (event) {
            var title = event.data.title.substring(0, event.data.title.lastIndexOf("."));
            var ext = event.data.title.split(".").pop();
            var url = event.data.url;

            var showError = function (message) {
                $("#move-page-dialog").find("form.aui").after(
                    '<div id="move-errors" class="warning">' +
                        '<div class="aui-message aui-message-error error">' +
                            message +
                        '</div>' +
                    '</div>'
                );
            };

            var moveHandler = function () {
                $("#move-page-dialog").find("#move-errors").remove();
                $("#move-page-dialog").find(".error").remove();

                var title = $("#file-name-input").val();
                var pageNode = $("#move-page-dialog").find(".highlighted").parent().attr("id");
                var check = true;

                if (!title) {
                    $("#file-name-input").after(
                        '<div id="file-name-error" class="error">' +
                            '$i18n.getText('fileName.required')' +
                        '</div>'
                    );
                    check = false;
                }
                if (!pageNode) {
                    $("#chosenSpaceKey").after(
                        '<div id="space-key-error" class="error">' +
                            '$i18n.getText('no.page.specified')' +
                        '</div>'
                    );
                    check = false;
                }

                if (check) {
                    var pageId = pageNode.substring(5, pageNode.length);
                    $(".button-spinner").spin();
                    $("#move-button").attr("disabled", "disabled");

                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "$!{saveAsUriAsHtml}", true);
                    xhr.send(JSON.stringify({
                        url: url,
                        title: title,
                        ext: ext,
                        pageId: pageId,
                    }));

                    xhr.onreadystatechange = function() {
                        if (xhr.readyState != 4) return;
                        if (xhr.status == 200) {
                            $("#move-page-dialog").remove();
                            $(".aui-blanket").remove();

                            var fileName = title + "." + ext;
                            var message = "$i18n.getText('onlyoffice.editor.dialog.save-as.message.success')".replace("$", fileName);
                            AJS.messages.success(".aui-flag-stack-top-item", {
                                body: message,
                                fadeout: true
                            });
                        } else if (xhr.status == 403) {
                            $(".button-spinner").spinStop();
                            $("#move-button").removeAttr("disabled");
                            showError("$i18n.getText('operation.forbidden.message')");
                        } else {
                            $(".button-spinner").spinStop();
                            $("#move-button").removeAttr("disabled");
                            showError("$i18n.getText('dialog.error.unknown.title')");
                        }
                    }
                }
            };

            var paramsDialog = {
                title: "$i18n.getText('onlyoffice.editor.dialog.save-as.title')",
                buttonName: "$i18n.getText('editor.save.page')",
                openedPanel: "$i18n.getText('move.page.dialog.browse.title')",
                moveHandler: moveHandler,
            };

            $("#move-page-dialog").remove();
            AJS.Confluence.MovePageDialog(paramsDialog);
            var dialog = $("#move-page-dialog");

            dialog.find(".tree").on("DOMNodeInserted", function() {
                if (dialog.find("form.aui").length != 0 && dialog.find("#file-name-input").length == 0) {
                    dialog.find("form.aui").prepend($(
                        '<div class="field-group">' +
                              '<label for="file-name-input">' +
                                    '$i18n.getText('file.name'):' +
                                    '<span class="aui-icon icon-required">required</span>' +
                              '</label>' +
                              '<input class="text" value="' + title + '" type="text" id="file-name-input" name="text-input">' +
                        '</div>'
                    ));
                }
                if (dialog.find(".root-node").length != 0 && !dialog.find(".root-node").hasClass("disabled")) {
                    dialog.find(".root-node").addClass("disabled");
                }
            });

            // Removing navigation buttons to other panels MovePageDialog
            dialog.find(".item-button:not(#browse-panel-id)").parent().remove();
            // Removing unused panels MovePageDialog
            dialog.find(".dialog-panel-body:not(.browse-panel)").remove();
            // Removing checkbox reorder
            dialog.find("#reorderRequirement").hide();
        };

        var createActionLink = function(href, actionData) {
            var link;
            var actionIndex = href.indexOf("&actionData=");
            if (actionIndex != -1) {
                var endIndex = href.indexOf("&", actionIndex + "&actionData=".length);
                if (endIndex != -1) {
                    link = href.substring(0, actionIndex) + href.substring(endIndex) + "&actionData=" + encodeURIComponent(actionData);
                } else {
                    link = href.substring(0, actionIndex) + "&actionData=" + encodeURIComponent(actionData);
                }
            } else {
                link = href + "&actionData=" + encodeURIComponent(actionData);
            }
            return link;
        }

        var onMakeActionLink = function (event) {
            var actionData = JSON.stringify(event.data);
            docEditor.setActionLink(createActionLink(location.href, actionData));
        };

        var onRequestReferenceData = function(event) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "${referenceDataUriAsHtml}");
            xhr.send(JSON.stringify(event.data));

            xhr.onreadystatechange = function() {
                if (xhr.readyState != 4) return;
                if (xhr.status == 200) {
                    docEditor.setReferenceData(JSON.parse(xhr.responseText));
                } else if (xhr.status == 403) {
                    docEditor.setReferenceData({error: "$i18n.getText('operation.forbidden.message')"});
                } else if (xhr.status == 404) {
                    docEditor.setReferenceData({error: "$i18n.getText('title.attachment.not.found')"});
                } else {
                    docEditor.setReferenceData({error: "$i18n.getText('dialog.error.unknown.title')"});
                }
            }
        };


            var onRequestUsers = function(event) {
                switch (event.data.c) {
                    case "info":
                        var users = [];
                        for (var i = 0; i < event.data.id.length; i++) {
                            var xhr = new XMLHttpRequest();
                            xhr.open("GET", AJS.contextPath() + "/rest/api/user?key=" + event.data.id[i], false);
                            xhr.send();

                            if (xhr.status == 200) {
                                const user = JSON.parse(xhr.responseText);
                                users.push({
                                    "id": user.username,
                                    "name": user.displayName,
                                    "image": document.location.origin + user.profilePicture.path
                                });
                            }
                        }

                        docEditor.setUsers({
                            "c": event.data.c,
                            "users": users,
                        });
                        break;
                }
            }

        var connectEditor = function () {
            if (typeof DocsAPI === "undefined") {
                alert("$i18n.getText('onlyoffice.editor.message.docs-api-undefined')");
                return;
            }

            var docsVersion = DocsAPI.DocEditor.version().split(".");

            if (docsVersion[0] < 6 || docsVersion[0] == 6 && docsVersion[1] == 0) {
                alert("$i18n.getText('onlyoffice.editor.message.docs-api-unsupported')");
                return;
            }

            var config = {
                "events" : {
                    "onAppReady": onAppReady,
                    "onRequestHistory": onRequestHistory,
                    "onRequestHistoryData": onRequestHistoryData,
                    "onRequestHistoryClose": onRequestHistoryClose,
                    "onRequestInsertImage": onRequestInsertImage,
                    "onRequestCompareFile": onRequestCompareFile,
                    "onRequestMailMergeRecipients": onRequestMailMergeRecipients,
                    "onMakeActionLink": onMakeActionLink,
                    "onRequestReferenceData": onRequestReferenceData,
                    "onRequestUsers": onRequestUsers
                },
            };

            if (!AJS.Meta.get("is-blog-post")) {
                config.events.onRequestSaveAs = onRequestSaveAs;
            }

            Object.assign(config, JSON.parse($("#editorConfig").html() || "{}"));
            if (config.document && (config.document.fileType === "docxf" || config.document.fileType === "oform")
                && docsVersion[0] < 7) {
                alert("$i18n.getText('onlyoffice.editor.message.forms.error.version')");
                return;
            }

            docEditor = new DocsAPI.DocEditor("iframeEditor", config);
        };

        if (window.addEventListener) {
            window.addEventListener("load", connectEditor);
        } else if (window.attachEvent) {
            window.attachEvent("load", connectEditor);
        }
    </script>
</body>

</html>